
language: node_js
dist: trusty
install:
- npm ci -q
# keep the npm cache around to speed up installs
cache:
  directories:
  - "$HOME/.npm"
before_install:
- npm i -g babel-cli webpack truffle-contract npm@latest
after_success:
- ./scripts/env_build.sh
deploy:
  ### olympia deployments
  # https://olympia.dev.gnosisdev.com/
- provider: s3
  bucket: olympia-development
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  access_key_id: $AWS_ACCESS_KEY_ID
  local_dir: dist
  skip_cleanup: true
  #before_deploy:
  #  - npm run build-config olympia/development
  on:
    branch: development
  # https://olympia.staging.gnosisdev.com/
- provider: s3
  bucket: olympia-staging
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  access_key_id: $AWS_ACCESS_KEY_ID
  skip_cleanup: true
  local_dir: dist
  upload-dir: current
  on:
    branch: olympia-qa
    condition: $PROJECT = olympia

- provider: s3
  bucket: olympia-staging
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  access_key_id: $AWS_ACCESS_KEY_ID
  skip_cleanup: true
  local_dir: dist
  upload-dir: releases/$TRAVIS_TAG
  on:
    tags: true
    condition: $PROJECT = olympia

# mainnet deployments
- provider: s3
  bucket: management-mainnet
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  access_key_id: $AWS_ACCESS_KEY_ID
  skip_cleanup: true
  local_dir: dist
  upload-dir: current
  #before_deploy:
  #  - npm run build-config mainnet/production
  on:
    branch: master
  # https://trading.dev.gnosisdev.com/
- provider: s3
  bucket: management-development
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  access_key_id: $AWS_ACCESS_KEY_ID
  skip_cleanup: true
  local_dir: dist
  #before_deploy:
  #  - npm run build-config mainnet/development
  on:
    branch: development
  # https://trading.staging.gnosisdev.com/
- provider: s3
  bucket: management-staging
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  access_key_id: $AWS_ACCESS_KEY_ID
  skip_cleanup: true
  local_dir: dist
  upload-dir: current
  #before_deploy:
  #  - npm run build-config mainnet/staging
  on:
    branch: master
